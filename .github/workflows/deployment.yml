name: buildx

on:
  push:
    tags: 
      - v*

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=is-mart-open/backend
          DOCKER_PLATFORMS=linux/amd64,linux/arm64
          VERSION=edge

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REG#refs/tags/v}
          fi
          
          TAGS="--tag ${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS --tag ${DOCKER_IMAGE}:latest"
          fi

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
            --build-arg VERSION=${VERSION} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8} \
            ${TAGS} --file ./Dockerfile .

      - name: Setup Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Docker Buildx (build)
        run: |
          docker buildx build \
          --cache-from "type=local,src=/tmp/.buildx--cache" \
          --cache-to "type=local,dest=/tmp/.buildx-cache" \
          --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}

      - name: Log in to Container registry
        if: success()
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.author }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Buildx (build)
        run: |
          docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}